terraform {
 
  required_version = ">= 0.13"

  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "3.56.0"
    }

    kubernetes = {
      source = "hashicorp/kubernetes"
      version = "2.21.1"
    }

    azapi = {
      source  = "Azure/azapi"
      version = "1.4.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
      skip_provider_registration = true
  features {
   /* #SubID: 0823c178-9c50-4608-9e50-c25fb1dec70e
  CLIENT_ID: ${{secrets.ASDA_WEA01_PREP_ARM_CLIENT_ID}}
  CLIENT_SECRET: ${{secrets.ASDA_WEA01_PREP_ARM_CLIENT_SECRET}}
  SUBSCRIPTION_ID: ${{secrets.ASDA_NEA01_PREP_ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ASDA_WEA01_PREP_ARM_TENANT_ID}}
  }*/
  
}
}
/*
provider "kubernetes" {
  host = azurerm_kubernetes_cluster.aks-primary.kube_config.0.host
  client_certificate     = base64decode(azurerm_kubernetes_cluster.aks-primary.kube_config.0.client_certificate)
  client_key             = base64decode(azurerm_kubernetes_cluster.aks-primary.kube_config.0.client_key)
  cluster_ca_certificate = base64decode(azurerm_kubernetes_cluster.aks-primary.kube_config.0.cluster_ca_certificate)
}
*/